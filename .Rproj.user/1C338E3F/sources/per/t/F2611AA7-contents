---
title: "Model scenario comparison"
author: "Chih-Lin Wei"
date: "`r Sys.Date()`"
output: github_document
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  message=FALSE,
  warning=FALSE,
  comment = "#>"
)
```

```{r}
library(ArgentinaSSP126)
library(ArgentinaSSP245)
library(ArgentinaSSP585)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(RColorBrewer)
library(sf)
```

# Custom R functions

We can use the same [ggplot](https://ggplot2.tidyverse.org/) wrap function to generate multi-panel plots. The custom plot function use the same four parameters, including:

* r: A rasterbrick containing the data.
* vt: A character vector of the new raster titles
* colours: A vector of colors to use for the color key.
* limits: A numeric vector of length two providing quantile limits for the color key scale.

```{r}
plot_fun <- function(r, vt=names(r), colours=NULL, q_limits=c(0.001, 0.999)){
  
  # Convert raster to data frame and then to list
  cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
  gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
  cmip6$var <- factor(cmip6$var, labels = vt)
  cmip6_list <- cmip6 %>% group_split(var)
  
  # Depth
  bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
  
  # ggolot list
  gg_list = lapply(cmip6_list, function(dat) {
    
    # Color key limits and colours
    lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
    lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
    # If the raster only have positive values, use sequential color palettes
    if(min(lim1) >= 0) {
      lims <- lim1; cols <- jet.colors2(7)
    # If the raster contains negative values, use diverging color palettes
    } else {
      lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
    # If color pallette is specified, use the specified color palette
    if(is.null(colours)) cols <- cols else cols <- colours
      
    # Plot raster layer
    ggplot(dat) +
      geom_raster(aes(x=x, y=y, fill=value))+
      geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
      geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
      geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
      geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
      scale_fill_gradientn(colours=cols, limits=lims)+
      scale_x_continuous(expand = expansion(mult = 0))+
      scale_y_continuous(expand = expansion(mult = 0))+
      labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
      facet_wrap(~ var) +
      theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
      })
  
  # Wrap ggplot list
  wrap_plots(gg_list, nrow=1)
}
```

Another application involves calculating the cumulative impacts of climate change hazards. The negative hazards are caused by declining export POC flux, deoxygenation, ocean acidification, and ocean warming. The positive impacts are increasing export POC flux, oxygenation, ocean basification, and ocean cooling. Here, we use the same function to calculate cumulative negative and positive impacts caused by climate change hazards.


```{r}
neg_imp <- function(r) {
  out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
                    calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
                    ) %>%ã€€overlay(fun=function(x)sum(x, na.rm=T))
  names(out) <- c("Negative")
  return(out)
} 
```

```{r}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp 
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp 
```

# How much the SSP126 decrease cumulative negative impact over SSP245?

```{r, fig.width=4, fig.height=7}
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
         vt=expression(Delta~Cumulative~Negative~Impact~("%"))
         )
```

# How much SSP585 worsen the cumulative negative impact over SSP245?

```{r, fig.width=4, fig.height=7}
plot_fun(r=overlay(n5, n2, fun=function(x, y) (x-y)/y*100),
         vt=expression(Delta~Cumulative~Negative~Impact~("%"))
         )
```


```{r}
t1 <- subset(ArgentinaSSP126::cmip6_extoe_constant, 1:4)
t2 <- subset(ArgentinaSSP245::cmip6_extoe_constant, 1:4)
t5 <- subset(ArgentinaSSP585::cmip6_extoe_constant, 1:4)
```

# How much SSP126 delay ToE over SSP245?

```{r, fig.width=11, fig.height=5}
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
         vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"), 
         colours=jet.colors3(7) %>% rev
         )
```

```{r, fig.width=3, fig.height=5}
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
         vt="Delta~Overall~ToE~(yr)", 
         colours=jet.colors3(7) %>% rev
         )
```

# How much SSP585 advance ToE over SSP245?

```{r, fig.width=11, fig.height=5}
plot_fun(r=overlay(t5, t2, fun=function(x, y) x-y),
         vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"), 
         colours=jet.colors3(7) %>% rev
         )
```

```{r, fig.width=3, fig.height=5}
plot_fun(r=overlay(overlay(t5, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
         vt="Delta~Overall~ToE~(yr)", 
         colours=jet.colors3(7) %>% rev
         )
```

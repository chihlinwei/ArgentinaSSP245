collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(ArgentinaSSP126)
library(ArgentinaSSP245)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(RColorBrewer)
library(sf)
plot_fun <- function(r, vt=names(r), colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
cum_imp <- function(r){
# Negative cumulative impact (exposure to climate change hazards for epc<0, o2<0, ph<0, and thetao>0)
n2050 <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
# Positive cumulative impact (exposure to climate change hazards for epc>0, o2>0, ph>0, and thetao<0)
p2050 <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x<0]<-NA; return(x)}),
calc(subset(r, 4), fun=function(x){x[x>0]<-NA; return(-x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
out <- addLayer(n2050, p2050)
names(out) <- c("Negative", "Positive")
out <- mask(out, etopo2022)
return(out)
}
cmip6_2041_2060_exsd %>% cum_imp
ArgentinaSSP126::cmip6_2041_2060_exsd %>% cum_imp
ArgentinaSSP245::cmip6_2041_2060_exsd %>% cum_imp
library(ArgentinaSSP585)
c1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% cum_imp
c2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% cum_imp
c5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% cum_imp
?overaly
?raster
overaly(c1, c2, fun=function(x, y) (x-y)/y*100)
overlay(c1, c2, fun=function(x, y) (x-y)/y*100)
c1
o1 <- overlay(c1, c2, fun=function(x, y) (x-y)/y*100)
names(o1) <- c("Negative", "Positive")
plot(o1)
expression(Delta~Cumulative~negative~impact~(\%))
plot_fun(r=o1 %>% mask(eez),
vt=c(expression(Delta~Cumulative~negative~impact~("%")), expression(Delta~Cumulative~positivce~impact~("%"))))
plot_fun(r=o1 %>% mask(eez),
vt=c(expression(Delta~Cumulative~negative~impact~("%")), expression(Delta~Cumulative~positivce~impact~("%"))))
plot_fun(r=o1,
vt=c(expression(Delta~Cumulative~negative~impact~("%")), expression(Delta~Cumulative~positivce~impact~("%"))))
h1 <- ArgentinaSSP126::cmip6_2041_2060_exsd
h2 <- ArgentinaSSP245::cmip6_2041_2060_exsd
h5 <- ArgentinaSSP585::cmip6_2041_2060_exsd
neg_imp <- function(r) addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot(n1)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
names(out) <- c("epc", "o2", "ph", "thetao")
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot(n1)
plot(overlay(n1, n2, fun=function(x, y) (x-y)/y*100))
o1 <- overlay(n1, n2, fun=function(x, y) (x-y)/y*100)
names(o1) <- c("epc", "o2", "ph", "thetao")
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~Impact~("%")), expression(Delta~Deoxygenation~impact~("%")), expression(Delta~Accidification~impact~("%")), expression(Delta~Warming~impact~("%"))))
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~Impact~("%")), expression(Delta~Deoxygenation~impact~("%")), expression(Delta~Accidification~impact~("%")), expression(Delta~Warming~impact~("%"))),
q_limits = c(0, 1)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~Impact~("%")), expression(Delta~Deoxygenation~impact~("%")), expression(Delta~Accidification~impact~("%")), expression(Delta~Warming~impact~("%"))),
q_limits = c(0, 1)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 1)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0.01, 0.99)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0.001, 0.999)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.999)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.95)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.975)
)
plot_fun(r=o1,
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
c1 <- overaly(n1, FUN=sum)
c1 <- overlay(n1, FUN=sum)
?overlay
c1 <- overlay(n1, fun=sum)
c1
c1 <- overlay(n1, fun=sum)
c2 <- overlay(n2, fun=sum)
c5 <- overlay(n5, fun=sum)
plot_fun(r=overlay(c1, c2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Cumulative~Negative~Impac~("%")),
q_limits = c(0, 0.99)
)
plot_fun(r=overlay(c1, c2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impac~("%")),
q_limits = c(0, 0.99)
)
plot_fun(r=overlay(c1, c2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impac~("%"))
)
plot(overlay(c1, c2, fun=function(x, y) (x-y)/y*100))
plot(c1)
plot(c2)
plot(n1)
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(ArgentinaSSP126)
library(ArgentinaSSP245)
library(ArgentinaSSP585)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(RColorBrewer)
library(sf)
plot_fun <- function(r, vt=names(r), colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
names(out) <- c("epc", "o2", "ph", "thetao")
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
?diff
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
names(out) <- c("epc", "o2", "ph", "thetao")
out <- calc(out, fun=function(x)x[is.na] <- 0)
return(out %>% mask(etopo2022))
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
names(out) <- c("epc", "o2", "ph", "thetao")
out <- calc(out, fun=function(x)x[is.na(x)] <- 0)
return(out %>% mask(etopo2022))
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot(n1)
plot(n2)
plot(n5)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-0; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-0; return(x)})
)
return(out %>% mask(etopo2022))
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot(n1)
plot(n2)
plot(n5)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
return(out %>% mask(etopo2022))
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-0; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-0; return(x)})
)
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
plot(n1)
plot(n2)
plot(n3)
plot(n5)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%")))
)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%")))
)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%")))
)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot(n1)
plot(n2)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
)
names(out) <- c("epc", "o2", "ph", "thetao")
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot(n1-n2)
plot((n1-n2)/n2)
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
plot((n1-n2)/n2)
neg_imp <- function(r) {
out <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
names(out) <- c("Negative")
return(out)
}
n1 <- ArgentinaSSP126::cmip6_2041_2060_exsd %>% neg_imp
n2 <- ArgentinaSSP245::cmip6_2041_2060_exsd %>% neg_imp
n5 <- ArgentinaSSP585::cmip6_2041_2060_exsd %>% neg_imp
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=c(expression(Delta~Food~Shortage~("%")), expression(Delta~Deoxygenation~("%")), expression(Delta~Accidification~("%")), expression(Delta~Warming~("%"))),
q_limits = c(0, 0.99)
)
overlay(n1, n2, fun=function(x, y) (x-y)/y*100)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impac~("%")),
q_limits = c(0, 0.99)
)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impac~("%")),
q_limits = c(0, 0.99)
)
plot_fun(r=overlay(n1, n2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impact~("%"))
)
plot_fun(r=overlay(n5, n2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impact~("%"))
)
t1 <- overlay(subset(ArgentinaSSP126::cmip6_extoe_constant, 1:4), fun=max)
t2 <- overlay(subset(ArgentinaSSP245::cmip6_extoe_constant, 1:4), fun=max)
t5 <- overlay(subset(ArgentinaSSP585::cmip6_extoe_constant, 1:4), fun=max)
t1
plot_fun(r=overlay(t1, t2, fun=function(x, y) (x-y)/y*100),
vt=expression(Delta~Cumulative~Negative~Impact~("%"))
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt=expression(Delta~Cumulative~Negative~Impact~("%"))
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt="Delta~When~climate~change>2*sigma~(yr)"
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt="Delta~ToE~(yr)"
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt="Delta~Time~of~Emergence~(yr)"
)
t1 <- subset(ArgentinaSSP126::cmip6_extoe_constant, 1:4)
t2 <- subset(ArgentinaSSP245::cmip6_extoe_constant, 1:4)
t5 <- subset(ArgentinaSSP585::cmip6_extoe_constant, 1:4)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y)
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y)
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y)
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)")
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"),
colours=jet.colors3(10) %>% rev
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"),
colours=jet.colors2(10) %>% rev
)
plot_fun(r=overlay(t1, t2, fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"),
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overaly(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"),
colours=jet.colors3(7) %>% rev
)
overaly(t1, fun=max)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"),
colours=jet.colors3(7) %>% rev
)
overlay(overlay(t1, fun=max)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~ToE~for~epc~o2~ph~thetao(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~ToE~for~epc~o2~ph~thetao~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~ToE~"for"~epc~o2~ph~thetao~(yr)",
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t1, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~Overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(t5, t2, fun=function(x, y) x-y),
vt=c("Delta~epc~ToE~(yr)", "Delta~o2~ToE~(yr)", "Delta~ph~ToE~(yr)", "Delta~thetao~ToE~(yr)"),
colours=jet.colors3(7) %>% rev
)
plot_fun(r=overlay(overlay(t5, fun=max), overlay(t2, fun=max), fun=function(x, y) x-y),
vt="Delta~Overall~ToE~(yr)",
colours=jet.colors3(7) %>% rev
)
